<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD mapper 3.0//EN'
'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>
<mapper namespace="com.wisdom.common.mapper.UserMapper">
<cache />
<resultMap type="com.wisdom.common.model.User" id="User">  
<result property="id" column="id"/>  
<result property="name" column="name"/>  
<result property="mail" column="mail"/>  
<result property="password" column="password"/>  
<result property="company" column="company"/>  
<result property="active" column="active"/>  
</resultMap>


<resultMap type="com.wisdom.common.model.UserRole" id="UserRole">
<result property="id" column="id"/>  
<result property="name" column="name"/>
<collection property="roles" ofType="Role" resultMap="RoleResult">
</collection>   	
</resultMap>
<resultMap type="Role" id="RoleResult">
    <id property='id' column='rid'/>
    <result property='name' column='rname'/>
</resultMap>
<resultMap type="com.wisdom.common.model.UserRecord" id="UserRecord">
<result property="id" column="id"/>
<result property="name" column="name"/>
<result property="mail" column="mail"/>
<result property="inspect" column="inspect"/>
<result property="recognize" column="recognize"/>
<result property="company" column="company"/>
<result property="active" column="active"/>
</resultMap>

  <select id="getUserById" resultType="User">
    SELECT
      *
    FROM user
    WHERE id = #{uid}
  </select>
 <select id="getUserByMail" resultType="User">
 	SELECT *
 	FROM user
 	WHERE mail = #{mail}
 </select>
 <insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
insert into user(name,password,company,active)
values(#{name},#{password},#{company},#{active})
<selectKey keyProperty="id" resultType="Integer" order="AFTER">
            SELECT LAST_INSERT_ID();
        </selectKey>
</insert>
<delete id="deleteUserById" parameterType="Integer">
delete from user where id=#{id}
</delete>
<select id="getAllUsersWithRoles" resultType="UserRole">
	select u.id as id,
	u.name as name,
	r.id as rid,
	r.name as rname
	from user u left join user_role ur on u.id = ur.user_id 
	left join role r on ur.role_id = r.id
</select>
<select id="getAllUsers" resultType="User">
select * from user
</select>
<update id="updateUser"  parameterType="Integer">
update user set name = #{name}, mail = #{mail} ,company = #{company} where id = #{id}  
</update>
<select id="getUsersByCompany" resultType="User">
select * from user where company=#{company}
</select>
<select id="getUsersByActive" resultType="User">
select * from user where active=#{active}
</select>
<insert id="addRoleToUser" parameterType="String">
INSERT INTO user_role(user_id,role_id) values( #{uid}, (select id from role where name=#{rname}))
</insert>
<delete id="removeRoleFromUser" parameterType="String">
delete from user_role where user_id=#{uid} and role_id=(select id from role where name=#{rname})
</delete>
<select id="getUsersByPname" resultType="User">
select * from user where id={select user_id from where role_id=(select role_id from where permission_id=(select id from permission where name=#{pname}))}
</select>
<update id="updateUserPassword"  parameterType="String">
update user set password=#{password} where id=#{id}
</update>

<update id="updateUserActiveStatus"  parameterType="Integer">
update user set active =#{status} where id = #{uid}  
</update>

<select id="getAllUsersWithWorkRecords" resultType="UserRecord">
SELECT u.id,u.name, sum(case when action = "CHECK" then 1 else 0 end) as inspect,
sum(case when action="RECOGNIZE" then 1 else 0 end) as recognize, u.mail as mail, u.company as company, u.active as active FROM record r right join user u on r.uid = u.id group by  u.id
</select>

<select id="getUserWithWorkRecord" resultType="UserRecord" parameterType="Integer">
SELECT u.id,u.name, sum(case when action = "CHECK" then 1 else 0 end) as inspect,
sum(case when action="RECOGNIZE" then 1 else 0 end) as recognize, u.mail as mail, u.company as company, u.active as active FROM record r right join user u on r.uid = u.id where u.id=#{uid} group by uid
</select>

<select id="getUsersCurrentWork" resultType="User" parameterType="String">
select * from user u left join invoice i on u.id = i.uid
left join user_role ur on u.id = ur.user_id
left join role r on r.id = ur.role_id
where r.name=#{rname}
</select>

</mapper>